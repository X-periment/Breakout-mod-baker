0001   0000             ; Code by Xperiment January 2023
0002   0000             ; initially just copied from Toni Baker book
0003   0000             ; first 5 (and last 3) includes came from  https://www.sinclairzxworld.com/viewtopic.php?t=2186&start=40 via ByteForever
0004   0000             #include "zx81defs.asm"
0001+  0000             ;defines to make us feel more at home
0002+  0000             #define         DEFB .BYTE 
0003+  0000             #define         DEFW .WORD
0004+  0000             #define         DEFM .TEXT
0005+  0000             #define         ORG  .ORG
0006+  0000             #define         EQU  .EQU
0005   0000             #include "zx81rom.asm"
0001+  0000             ;ZX81 ROM routines 
0002+  0000             PRINT			EQU $10
0003+  0000             PRINTAT			EQU $08F5
0004+  0000             DISPROUT		EQU $0281
0005+  0000             ;D_FILE			EQU	$400C
0006+  0000             DISPLAY_3		EQU $0292 ;restore registers after a 'slow' display
0007+  0000             DISPLAY_5		EQU $02B5
0008+  0000             PLOT			EQU $0BB2 	; note ROM plot is 0baf - however first thing it does try to pull BC from the calculator stack
0009+  0000             							; so we'll skip past that and set BC ourselves
0010+  0000             CLS				EQU $0A2A
0011+  0000             KSCAN           EQU $02BB 
0012+  0000             FINDCHR         EQU $07BD
0013+  0000             COPY            EQU $0869
0014+  0000             FAST            EQU $0F23
0015+  0000             SLOW            EQU $0F2B
0016+  0000             SLOWORFAST		EQU $0207
0017+  0000             PAUSE			EQU $0F32
0018+  0000             SCROLL 			EQU $0C0E
0019+  0000             ;sys vars
0020+  0000             ERR_NR			EQU $40000006   0000             #include "charcodes.asm"
0001+  0000             ; ZX81 Characters. 
0002+  0000             __:				EQU	$00	;spacja
0003+  0000             _QT:			EQU	$0B	;"
0004+  0000             _PD:			EQU	$0C	;funt 
0005+  0000             _SD:			EQU	$0D	;$
0006+  0000             _CL:			EQU	$0E	;:
0007+  0000             _QM:			EQU	$0F	;?
0008+  0000             _OP:			EQU	$10	;(
0009+  0000             _CP:			EQU	$11	;)
0010+  0000             _GT:			EQU	$12	;>
0011+  0000             _LT:			EQU	$13	;<
0012+  0000             _EQ:			EQU	$14	;=
0013+  0000             _PL:			EQU	$15	;+
0014+  0000             _MI:			EQU	$16	;-
0015+  0000             _AS:			EQU	$17	;*
0016+  0000             _SL:			EQU	$18	;/
0017+  0000             _SC:			EQU	$19	;;
0018+  0000             _CM:			EQU	$1A	;,
0019+  0000             _DT:			EQU	$1B	;.
0020+  0000             _NL:			EQU	$76	;NEWLINE
0021+  0000             
0022+  0000             _0				EQU $1C
0023+  0000             _1				EQU $1D
0024+  0000             _2				EQU $1E
0025+  0000             _3				EQU $1F
0026+  0000             _4				EQU $20
0027+  0000             _5				EQU $21
0028+  0000             _6				EQU $22
0029+  0000             _7				EQU $23
0030+  0000             _8				EQU $24
0031+  0000             _9				EQU $25
0032+  0000             _A				EQU $26
0033+  0000             _B				EQU $27
0034+  0000             _C				EQU $28
0035+  0000             _D				EQU $29
0036+  0000             _E				EQU $2A
0037+  0000             _F				EQU $2B
0038+  0000             _G				EQU $2C
0039+  0000             _H				EQU $2D
0040+  0000             _I				EQU $2E
0041+  0000             _J				EQU $2F
0042+  0000             _K				EQU $30
0043+  0000             _L				EQU $31
0044+  0000             _M				EQU $32
0045+  0000             _N				EQU $33
0046+  0000             _O				EQU $34
0047+  0000             _P				EQU $35
0048+  0000             _Q				EQU $36
0049+  0000             _R				EQU $37
0050+  0000             _S				EQU $38
0051+  0000             _T				EQU $39
0052+  0000             _U				EQU $3A
0053+  0000             _V				EQU $3B
0054+  0000             _W				EQU $3C
0055+  0000             _X				EQU $3D
0056+  0000             _Y				EQU $3E
0057+  0000             _Z				EQU $3F
0007   0000             #include "zx81sys.asm"
0001+  0000             ;system variables
0002+  0000             ;Origin of a ZX81 file is always 16393 
0003+  0000             
0004+  4009                             ORG $4009 
0005+  4009                             
0006+  4009             ; System variables live here
0007+  4009 00          VERSN:          DEFB 0
0008+  400A 02 00       E_PPC:          DEFW 2
0009+  400C 95 42       D_FILE:         DEFW Display
0010+  400E 96 42       DF_CC:          DEFW Display+1                  ; First character of display
0011+  4010 F0 45       VARS:           DEFW Variables
0012+  4012 00 00       DEST:           DEFW 0
0013+  4014 F1 45       E_LINE:         DEFW BasicEnd 
0014+  4016 F5 45       CH_ADD:         DEFW BasicEnd+4                 ; Simulate SAVE "X"
0015+  4018 00 00       X_PTR:          DEFW 0
0016+  401A F6 45       STKBOT:         DEFW BasicEnd+5
0017+  401C F6 45       STKEND:         DEFW BasicEnd+5                 ; Empty stack
0018+  401E 00          BREG:           DEFB 0
0019+  401F 5D 40       MEM:            DEFW MEMBOT
0020+  4021 00          UNUSED1:        DEFB 0
0021+  4022 02          DF_SZ:          DEFB 2
0022+  4023 02 00       S_TOP:          DEFW $0002                      ; Top program line number
0023+  4025 BF FD       LAST_K:         DEFW $fdbf
0024+  4027 0F          DEBOUN:         DEFB 15
0025+  4028 37          MARGIN:         DEFB 55
0026+  4029 83 42       NXTLIN:         DEFW Line2                      ; Next line address
0027+  402B 00 00       OLDPPC:         DEFW 0
0028+  402D 00          FLAGX:          DEFB 0
0029+  402E 00 00       STRLEN:         DEFW 0
0030+  4030 8D 0C       T_ADDR:         DEFW $0c8d
0031+  4032 00 00       SEED:           DEFW 0
0032+  4034 A3 F5       FRAMES:         DEFW $f5a3
0033+  4036 00 00       COORDS:         DEFW 0
0034+  4038 BC          PR_CC:          DEFB $bc
0035+  4039 21 18       S_POSN:         DEFW $1821
0036+  403B 40          CDFLAG:         DEFB $40
0037+  403C 00 00 00 00 PRBUFF:         DEFB 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,$76 ; 32 Spaces + Newline
0037+  4040 00 00 00 00 
0037+  4044 00 00 00 00 
0037+  4048 00 00 00 00 
0037+  404C 00 00 00 00 
0037+  4050 00 00 00 00 
0037+  4054 00 00 00 00 
0037+  4058 00 00 00 00 
0037+  405C 76 
0038+  405D 00 00 00 00 MEMBOT:         DEFB 0,0,0,0,0,0,0,0,0,0,$84,$20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 ; 30 zeros
0038+  4061 00 00 00 00 
0038+  4065 00 00 84 20 
0038+  4069 00 00 00 00 
0038+  406D 00 00 00 00 
0038+  4071 00 00 00 00 
0038+  4075 00 00 00 00 
0038+  4079 00 00 
0039+  407B 00 00       UNUNSED2:       DEFW 0
0040+  407D             
0041+  407D             ; End of system variables
0042+  407D             
0008   407D             #include "line1.asm"
0001+  407D             ;Line 1 
0002+  407D             ;this is the REM statement...
0003+  407D 00 00       Line1:          DEFB $00,$00                    ; Line 1
0004+  407F 02 02                       DEFW Line1End-Line1Text         ; Line 1 length
0005+  4081 EA          Line1Text:      DEFB $ea                        ; REM             
0006+  4082             
0009   4082             
0010   4082 C3 A4 40        jp breakout
0011   4085             
0012   4085             #include "Lib_general.asm"
0001+  4085             ;--------------------------------------------
0002+  4085             
0003+  4085             delay2
0004+  4085 C5              push bc
0005+  4086 47              ld b, a
0006+  4087 0E FF           ld c, $ff
0007+  4089             delay_loop
0008+  4089 0B              dec bc
0009+  408A 78              ld a, b
0010+  408B B1              or c
0011+  408C 20 FB           jr nz, delay_loop
0012+  408E C1              pop bc
0013+  408F C9              ret
0014+  4090             
0015+  4090             ;---------------------------------------
0013   4090             
0014   4090             ballinit
0015   4090 00 00           DEFW $0000
0016   4092             ballpos
0017   4092 00 00           DEFW $0000
0018   4094             speed
0019   4094 00 00           DEFW $0000
0020   4096             direction
0021   4096 00 00           DEFW $0000
0022   4098             batpos
0023   4098 00 00           DEFW $0000
0024   409A             seed
0025   409A 1E 04           DEFW $041e
0026   409C             
0027   409C             tablestart
0028   409C 20 00 22 00     DEFW $0020, $0022
0029   40A0 E0 FF DE FF     DEFW $ffe0, $ffde
0030   40A4             
0031   40A4             breakout
0032   40A4 2A 0C 40        ld hl, (D_FILE)
0033   40A7 11 85 00        ld de, $0085   ; note toni has $8085 here
0034   40AA 19              add hl, de
0035   40AB 01 80 80        ld bc, $8080
0036   40AE             
0037   40AE             nxbrk
0038   40AE 23              inc hl
0039   40AF 7E              ld a, (hl)
0040   40B0 FE 76           cp $76
0041   40B2 28 FA           jr z, nxbrk
0042   40B4 36 08           ld (hl), $08
0043   40B6 10 F6           djnz nxbrk
0044   40B8             
0045   40B8 2A 0C 40        ld hl, (D_FILE)
0046   40BB 06 1E           ld b, $1e
0047   40BD             
0048   40BD             nxbl
0049   40BD 23              inc hl
0050   40BE 71              ld (hl), c
0051   40BF 10 FC           djnz nxbl
0052   40C1 23              inc hl
0053   40C2 36 9C           ld (hl), $9c
0054   40C4 23              inc hl
0055   40C5 71              ld (hl), c
0056   40C6 23              inc hl
0057   40C7 23              inc hl
0058   40C8 11 1F 00        ld de, $001f
0059   40CB 06 15           ld b, $15
0060   40CD             
0061   40CD                 ;
0062   40CD             sides
0063   40CD 71              ld (hl), c
0064   40CE 19              add hl, de
0065   40CF             
0066   40CF 71              ld (hl), c
0067   40D0 23              inc hl
0068   40D1 23              inc hl
0069   40D2 10 F9           djnz sides
0070   40D4             
0071   40D4             base
0072   40D4 36 1B           ld (hl), $1b
0073   40D6 23              inc hl
0074   40D7 10 FB           djnz base
0075   40D9             
0076   40D9 11 E5 FE        ld de, $fee5
0077   40DC 19              add hl, de
0078   40DD 22 90 40        ld (ballinit), hl
0079   40E0 21 00 09        ld hl, $0900
0080   40E3 22 94 40        ld (speed), hl
0081   40E6             
0082   40E6             restart
0083   40E6 2A 90 40        ld hl, (ballinit)
0084   40E9 23              inc hl
0085   40EA 22 90 40        ld (ballinit), hl
0086   40ED 22 92 40        ld (ballpos), hl
0087   40F0 36 34           ld (hl), $34
0088   40F2 21 E0 FF        ld hl, $ffe0
0089   40F5 22 96 40        ld (direction), hl
0090   40F8 3A 94 40        ld a, (speed)
0091   40FB 3D              dec a
0092   40FC C8              ret z
0093   40FD             
0094   40FD 32 94 40        ld (speed), a
0095   4100 2A 0C 40        ld hl, (D_FILE)
0096   4103 11 B7 02        ld de, $02b7
0097   4106 19              add hl, de
0098   4107 36 00           ld (hl), $00
0099   4109 3E 03           ld a, $03
0100   410B 23              inc hl
0101   410C 77              ld (hl), a
0102   410D 23              inc hl
0103   410E 77              ld (hl), a
0104   410F 23              inc hl
0105   4110 77              ld (hl), a
0106   4111 22 98 40        ld (batpos), hl
0107   4114 23              inc hl
0108   4115 77              ld (hl), a
0109   4116 23              inc hl
0110   4117 77              ld (hl), a
0111   4118 06 18           ld b, $18
0112   411A             erase
0113   411A 23              inc hl
0114   411B 36 00           ld (hl), $00
0115   411D 10 FB           djnz erase
0116   411F 21 00 00        ld hl, $0000
0117   4122 18 03           jr delay
0118   4124             
0119   4124             loop
0120   4124 2A 94 40        ld hl, (speed)
0121   4127             delay
0122   4127 2B              dec hl
0123   4128 7C              ld a, h
0124   4129 B5              or l
0125   412A 20 FB           jr nz, delay
0126   412C 04              inc b
0127   412D CB 40           bit 0, b
0128   412F 20 67           jr nz, movebat
0129   4131             
0130   4131             moveball
0131   4131 2A 92 40        ld hl, (ballpos)
0132   4134 36 00           ld (hl), $00
0133   4136 ED 5B 96 40     ld de, (direction)
0134   413A             
0135   413A EB              ex de, hl
0136   413B CD DE 41        call DispHLinHex
0137   413E EB              ex de, hl
0138   413F             
0139   413F 19              add hl, de
0140   4140 7E              ld a, (hl)
0141   4141 FE 1B           cp $1b
0142   4143                 ;ret z
0143   4143 28 A1           jr z, restart
0144   4145 4F              ld c,a
0145   4146 E6 F7           and $f7
0146   4148 20 05           jr nz, dontmove
0147   414A 36 34           ld (hl), $34  ; 34
0148   414C 22 92 40        ld (ballpos), hl
0149   414F             
0150   414F             dontmove
0151   414F B1              or c
0152   4150 28 46           jr z, movebat
0153   4152 E5              push hl
0154   4153 2A 9A 40        ld hl, (seed)
0155   4156 54              ld d, h
0156   4157 5D              ld e, l
0157   4158 29              add hl, hl
0158   4159 29              add hl, hl
0159   415A 19              add hl, de
0160   415B 29              add hl, hl
0161   415C 29              add hl, hl
0162   415D 29              add hl, hl
0163   415E 19              add hl, de
0164   415F 22 9A 40        ld (seed), hl
0165   4162 7C              ld a, h
0166   4163 22 9A 40        ld (seed), hl
0167   4166 7C              ld a, h
0168   4167 22 9A 40        ld (seed), hl
0169   416A 7C              ld a,h
0170   416B E6 06           and $06
0171   416D 21 9C 40        ld hl, tablestart
0172   4170 85              add a, l
0173   4171 6F              ld l, a
0174   4172             
0175   4172 5E              ld e, (hl)
0176   4173 23              inc hl
0177   4174 56              ld d, (hl)
0178   4175 ED 53 96 40     ld (direction), de
0179   4179 E1              pop hl
0180   417A 79              ld a,c
0181   417B FE 08           cp $08
0182   417D 20 B2           jr nz, moveball
0183   417F 2A 0C 40        ld hl, (D_FILE)
0184   4182 11 1F 00        ld de, $001f
0185   4185 19              add hl, de
0186   4186             
0187   4186             carry
0188   4186 7E              ld a, (hl)
0189   4187 FE 80           cp $80
0190   4189             
0191   4189             
0192   4189 20 02           jr nz, digit
0193   418B 3E 9C           ld a, $9c
0194   418D             digit
0195   418D 3C              inc a
0196   418E FE A6           cp $a6
0197   4190 20 05           jr nz, increased
0198   4192 36 9C           ld (hl), $9c
0199   4194 2B              dec hl
0200   4195 18 EF           jr carry
0201   4197             increased
0202   4197 77              ld (hl), a
0203   4198             
0204   4198             movebat
0205   4198 C5              push bc
0206   4199 CD BB 02        call $02bb ;call kscan
0207   419C C1              pop bc
0208   419D 7D              ld a,l
0209   419E 2F              cpl
0210   419F F5              push af
0211   41A0 E6 0F           and $0f
0212   41A2 28 17           jr z, notleft
0213   41A4 2A 98 40        ld hl, (batpos)
0214   41A7 2B              dec hl
0215   41A8 2B              dec hl
0216   41A9 2B              dec hl
0217   41AA 7E              ld a, (hl)
0218   41AB FE 80           cp $80
0219   41AD 28 29           jr z, cycle1
0220   41AF 36 03           ld (hl), $03
0221   41B1 23              inc hl
0222   41B2 23              inc hl
0223   41B3 22 98 40        ld (batpos), hl
0224   41B6 23              inc hl
0225   41B7 23              inc hl
0226   41B8 23              inc hl
0227   41B9 36 00           ld (hl),$00
0228   41BB             notleft
0229   41BB F1              pop af
0230   41BC E6 F0           and $f0
0231   41BE 28 19           jr z, cycle2
0232   41C0 2A 98 40        ld hl, (batpos)
0233   41C3 23              inc hl
0234   41C4 23              inc hl
0235   41C5 23              inc hl
0236   41C6 7E              ld a, (hl)
0237   41C7 FE 80           cp $80
0238   41C9 28 0E           jr z, cycle2
0239   41CB 36 03           ld (hl), $03
0240   41CD 2B              dec hl
0241   41CE 2B              dec hl
0242   41CF 22 98 40        ld (batpos), hl
0243   41D2 2B              dec hl
0244   41D3 2B              dec hl
0245   41D4 2B              dec hl
0246   41D5 36 00           ld (hl), $00
0247   41D7 E5              push hl
0248   41D8             cycle1
0249   41D8 E1              pop hl
0250   41D9             cycle2
0251   41D9 C3 24 41        jp loop
0252   41DC             
0253   41DC             
0254   41DC             endLoop
0255   41DC                 ; ld bc, $fefe
0256   41DC                 ; in a, (c)
0257   41DC                 ; xor $ff
0258   41DC                 ; ld (de), a
0259   41DC                 ;
0260   41DC                 ;
0261   41DC                 ; ld bc, $ffef
0262   41DC                 ; in a, (c)
0263   41DC                 ;
0264   41DC                 ; ld l, a
0265   41DC                 ; ld a, 0
0266   41DC                 ; ld h, a
0267   41DC                 ; call DispHL2
0268   41DC                 ;
0269   41DC                 ; ld a, $d5
0270   41DC                 ; call delay2
0271   41DC 18 FE           jr endLoop
0272   41DE             
0273   41DE             
0274   41DE             
0275   41DE             
0276   41DE             
0277   41DE             
0278   41DE             #include "from_brandonw.asm"
0001+  41DE             ; from or modified from https://wikiti.brandonw.net/index.php?title=Z80_Routines
0002+  41DE             
0003+  41DE             ;Display a 16- or 8-bit number in hex.
0004+  41DE             
0005+  41DE             DispHLinHex
0006+  41DE C5              push bc
0007+  41DF D5              push de
0008+  41E0 F5              push af
0009+  41E1 E5              push hl
0010+  41E2             
0011+  41E2 01 0A 00        ld bc, 10
0012+  41E5 ED 5B 0E 40     ld de, (DF_CC)
0013+  41E9 EB              ex de, hl
0014+  41EA 09              add hl, bc
0015+  41EB EB              ex de, hl
0016+  41EC             
0017+  41EC CD F4 41        call DispHLhex
0018+  41EF             
0019+  41EF E1              pop hl
0020+  41F0 F1              pop af
0021+  41F1 D1              pop de
0022+  41F2 C1              pop bc
0023+  41F3             
0024+  41F3 C9              ret
0025+  41F4             
0026+  41F4             DispHLhex
0027+  41F4             ; Input: HL
0028+  41F4 4C              ld  c,h
0029+  41F5 CD F9 41        call  OutHex8
0030+  41F8 4D              ld  c,l
0031+  41F9             
0032+  41F9             OutHex8
0033+  41F9             ; Input: C
0034+  41F9 79              ld  a,c
0035+  41FA 1F              rra
0036+  41FB 1F              rra
0037+  41FC 1F              rra
0038+  41FD 1F              rra
0039+  41FE CD 02 42        call  Conv
0040+  4201 79              ld  a,c
0041+  4202             Conv
0042+  4202 E6 0F           and  $0F
0043+  4204                 ; for zx81 we need to check it greater than the char for 9, and then translate to abcdef codes - actually it is simpeler as on zx81 abc follows 123.
0044+  4204 C6 1C           add a, $1c
0045+  4206                 ;add  a,$90
0046+  4206                 ;daa   ;  This won't work on zx81!! different char set!!
0047+  4206                 ;adc  a,$40
0048+  4206                 ;daa
0049+  4206 CD 59 42        call PUTCHAR  ;replace by bcall(_PutC) or similar
0050+  4209 C9              ret
0051+  420A             
0052+  420A             ;Number in hl to decimal ASCII
0053+  420A             ;Thanks to z80 Bits
0054+  420A             ;inputs:	hl = number to ASCII
0055+  420A             ;example: hl=300 outputs '00300'
0056+  420A             ;destroys: af, bc, hl, de used
0057+  420A             
0058+  420A             DispHL3
0059+  420A 01 14 00        ld bc, 20
0060+  420D ED 5B 0E 40     ld de, (DF_CC)
0061+  4211 EB              ex de, hl
0062+  4212 09              add hl, bc
0063+  4213 EB              ex de, hl
0064+  4214 CD 34 42        call DispHL
0065+  4217             
0066+  4217 C9              ret
0067+  4218             
0068+  4218             DispDE2
0069+  4218 EB              ex de, hl
0070+  4219 CD 1E 42        call DispHL2
0071+  421C EB              ex de, hl
0072+  421D C9              ret
0073+  421E             
0074+  421E             DispHL2
0075+  421E C5              push bc
0076+  421F D5              push de
0077+  4220 F5              push af
0078+  4221 E5              push hl
0079+  4222             
0080+  4222 01 0A 00        ld bc, 10
0081+  4225 ED 5B 0E 40     ld de, (DF_CC)
0082+  4229 EB              ex de, hl
0083+  422A 09              add hl, bc
0084+  422B EB              ex de, hl
0085+  422C CD 34 42        call DispHL
0086+  422F             
0087+  422F E1              pop hl
0088+  4230 F1              pop af
0089+  4231 D1              pop de
0090+  4232 C1              pop bc
0091+  4233             
0092+  4233 C9              ret
0093+  4234             
0094+  4234             DispHL
0095+  4234 01 F0 D8      	ld	bc,-10000
0096+  4237 CD 4D 42      	call	Num1
0097+  423A 01 18 FC      	ld	bc,-1000
0098+  423D CD 4D 42      	call	Num1
0099+  4240 01 9C FF      	ld	bc,-100
0100+  4243 CD 4D 42      	call	Num1
0101+  4246 0E F6         	ld	c,-10
0102+  4248 CD 4D 42      	call	Num1
0103+  424B 0E FF         	ld	c,-1
0104+  424D 3E 1B       Num1:	ld	a,_0-1
0105+  424F 3C          Num2:	inc	a
0106+  4250 09            	add	hl,bc
0107+  4251 38 FC         	jr	c,Num2
0108+  4253 ED 42         	sbc	hl,bc
0109+  4255 CD 59 42      	call PUTCHAR
0110+  4258 C9            	ret
0111+  4259             
0112+  4259             PUTCHAR
0113+  4259 F5              push af
0114+  425A 13              inc de
0115+  425B 12              ld (de), a
0116+  425C F1              pop af
0117+  425D C9              ret
0118+  425E             
0119+  425E             ;-----> Generate a random number
0120+  425E             ; output a=answer 0<=a<=255
0121+  425E             ; all registers are preserved except: af
0122+  425E             randData
0123+  425E 00 00           DEFW 0
0124+  4260             random
0125+  4260 E5              push    hl
0126+  4261 D5              push    de
0127+  4262 2A 5E 42        ld      hl,(randData)
0128+  4265 ED 5F           ld      a,r
0129+  4267 57              ld      d,a
0130+  4268 5E              ld      e,(hl)
0131+  4269 19              add     hl,de
0132+  426A 85              add     a,l
0133+  426B AC              xor     h
0134+  426C 22 5E 42        ld      (randData),hl
0135+  426F D1              pop     de
0136+  4270 E1              pop     hl
0137+  4271 C9              ret
0138+  4272             
0139+  4272             
0140+  4272             ;------------------
0141+  4272             ; 8*8 The following routine multiplies h by e and places the result in hl
0142+  4272             
0143+  4272             mult_h_e
0144+  4272 16 00          ld	d, 0	; Combining the overhead and
0145+  4274 CB 24          sla	h	; optimised first iteration
0146+  4276 9F             sbc	a, a
0147+  4277 A3             and	e
0148+  4278 6F             ld	l, a
0149+  4279             
0150+  4279 06 07          ld	b, 7
0151+  427B             mult_loop
0152+  427B 29             add	hl, hl
0153+  427C 30 01          jr	nc, $+3
0154+  427E 19             add	hl, de
0155+  427F             
0156+  427F 10 FA          djnz	mult_loop
0157+  4281             
0158+  4281 C9             ret
0279   4282             
0280   4282             #include "line2.asm"
0001+  4282             ;this is the end of line 1 - the REM	 		
0002+  4282 76          				DEFB $76                        ; Newline				
0003+  4283             ;followed by the the RAND USR line				
0004+  4283             Line1End       
0005+  4283 00 0A       Line2			DEFB $00,$0a
0006+  4285 0E 00                       DEFW Line2End-Line2Text
0007+  4287 F9 D4       Line2Text     	DEFB $F9,$D4                    ; RAND USR
0008+  4289 1D 22 21 1D 				DEFB $1D,$22,$21,$1D,$20        ; 16514                
0008+  428D 20 
0009+  428E 7E                          DEFB $7E                        ; Number
0010+  428F 8F 01 04 00                 DEFB $8F,$01,$04,$00,$00        ; Numeric encoding
0010+  4293 00 
0011+  4294 76                          DEFB $76                        ; Newline
0012+  4295             Line2End 
0281   4295             #include "screen16K.asm"      			; definition of the screen memory, in colapsed version for 1K
0001+  4295             ;ZX81 screens
0002+  4295             ; Display file (ZX81 screen) - low res screen
0003+  4295             Display        	;
0004+  4295 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 0, 136 first chr$118 marks the start of DFILE
0004+  4299 00 00 00 00 
0004+  429D 00 00 00 00 
0004+  42A1 00 00 00 00 
0004+  42A5 00 00 00 00 
0004+  42A9 00 00 00 00 
0004+  42AD 00 00 00 00 
0004+  42B1 00 00 00 00 
0004+  42B5 00 
0005+  42B6 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 1, play area offset from DF_CC 12 to 18
0005+  42BA 00 00 00 00 
0005+  42BE 00 00 00 00 
0005+  42C2 00 00 00 00 
0005+  42C6 00 00 00 00 
0005+  42CA 00 00 00 00 
0005+  42CE 00 00 00 00 
0005+  42D2 00 00 00 00 
0005+  42D6 00 
0006+  42D7 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 2, "" 22 to 28
0006+  42DB 00 00 00 00 
0006+  42DF 00 00 00 00 
0006+  42E3 00 00 00 00 
0006+  42E7 00 00 00 00 
0006+  42EB 00 00 00 00 
0006+  42EF 00 00 00 00 
0006+  42F3 00 00 00 00 
0006+  42F7 00 
0007+  42F8 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 3  "" 32 to 38
0007+  42FC 00 00 00 00 
0007+  4300 00 00 00 00 
0007+  4304 00 00 00 00 
0007+  4308 00 00 00 00 
0007+  430C 00 00 00 00 
0007+  4310 00 00 00 00 
0007+  4314 00 00 00 00 
0007+  4318 00 
0008+  4319 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 4     42 to 48  etc
0008+  431D 00 00 00 00 
0008+  4321 00 00 00 00 
0008+  4325 00 00 00 00 
0008+  4329 00 00 00 00 
0008+  432D 00 00 00 00 
0008+  4331 00 00 00 00 
0008+  4335 00 00 00 00 
0008+  4339 00 
0009+  433A 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 5
0009+  433E 00 00 00 00 
0009+  4342 00 00 00 00 
0009+  4346 00 00 00 00 
0009+  434A 00 00 00 00 
0009+  434E 00 00 00 00 
0009+  4352 00 00 00 00 
0009+  4356 00 00 00 00 
0009+  435A 00 
0010+  435B 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 6
0010+  435F 00 00 00 00 
0010+  4363 00 00 00 00 
0010+  4367 00 00 00 00 
0010+  436B 00 00 00 00 
0010+  436F 00 00 00 00 
0010+  4373 00 00 00 00 
0010+  4377 00 00 00 00 
0010+  437B 00 
0011+  437C 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 7    ;; all the 136 in here get overriten with the
0011+  4380 00 00 00 00 
0011+  4384 00 00 00 00 
0011+  4388 00 00 00 00 
0011+  438C 00 00 00 00 
0011+  4390 00 00 00 00 
0011+  4394 00 00 00 00 
0011+  4398 00 00 00 00 
0011+  439C 00 
0012+  439D 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 8    ;; blank space "0" character, but this was to test
0012+  43A1 00 00 00 00 
0012+  43A5 00 00 00 00 
0012+  43A9 00 00 00 00 
0012+  43AD 00 00 00 00 
0012+  43B1 00 00 00 00 
0012+  43B5 00 00 00 00 
0012+  43B9 00 00 00 00 
0012+  43BD 00 
0013+  43BE 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 9    ;; that the screen has blanked fully
0013+  43C2 00 00 00 00 
0013+  43C6 00 00 00 00 
0013+  43CA 00 00 00 00 
0013+  43CE 00 00 00 00 
0013+  43D2 00 00 00 00 
0013+  43D6 00 00 00 00 
0013+  43DA 00 00 00 00 
0013+  43DE 00 
0014+  43DF 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 10   ;;
0014+  43E3 00 00 00 00 
0014+  43E7 00 00 00 00 
0014+  43EB 00 00 00 00 
0014+  43EF 00 00 00 00 
0014+  43F3 00 00 00 00 
0014+  43F7 00 00 00 00 
0014+  43FB 00 00 00 00 
0014+  43FF 00 
0015+  4400 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 11   ;; if the memory is full then thre game will crash
0015+  4404 00 00 00 00 
0015+  4408 00 00 00 00 
0015+  440C 00 00 00 00 
0015+  4410 00 00 00 00 
0015+  4414 00 00 00 00 
0015+  4418 00 00 00 00 
0015+  441C 00 00 00 00 
0015+  4420 00 
0016+  4421 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 12   ;; beforte it gets to clear play area  hence the
0016+  4425 00 00 00 00 
0016+  4429 00 00 00 00 
0016+  442D 00 00 00 00 
0016+  4431 00 00 00 00 
0016+  4435 00 00 00 00 
0016+  4439 00 00 00 00 
0016+  443D 00 00 00 00 
0016+  4441 00 
0017+  4442 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 13   ;; message no-one should see "OUT OF MEMEORY"
0017+  4446 00 00 00 00 
0017+  444A 00 00 00 00 
0017+  444E 00 00 00 00 
0017+  4452 00 00 00 00 
0017+  4456 00 00 00 00 
0017+  445A 00 00 00 00 
0017+  445E 00 00 00 00 
0017+  4462 00 
0018+  4463 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 14   ;; if the game fits in 1K
0018+  4467 00 00 00 00 
0018+  446B 00 00 00 00 
0018+  446F 00 00 00 00 
0018+  4473 00 00 00 00 
0018+  4477 00 00 00 00 
0018+  447B 00 00 00 00 
0018+  447F 00 00 00 00 
0018+  4483 00 
0019+  4484 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 15
0019+  4488 00 00 00 00 
0019+  448C 00 00 00 00 
0019+  4490 00 00 00 00 
0019+  4494 00 00 00 00 
0019+  4498 00 00 00 00 
0019+  449C 00 00 00 00 
0019+  44A0 00 00 00 00 
0019+  44A4 00 
0020+  44A5 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 16
0020+  44A9 00 00 00 00 
0020+  44AD 00 00 00 00 
0020+  44B1 00 00 00 00 
0020+  44B5 00 00 00 00 
0020+  44B9 00 00 00 00 
0020+  44BD 00 00 00 00 
0020+  44C1 00 00 00 00 
0020+  44C5 00 
0021+  44C6 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 17
0021+  44CA 00 00 00 00 
0021+  44CE 00 00 00 00 
0021+  44D2 00 00 00 00 
0021+  44D6 00 00 00 00 
0021+  44DA 00 00 00 00 
0021+  44DE 00 00 00 00 
0021+  44E2 00 00 00 00 
0021+  44E6 00 
0022+  44E7 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 18
0022+  44EB 00 00 00 00 
0022+  44EF 00 00 00 00 
0022+  44F3 00 00 00 00 
0022+  44F7 00 00 00 00 
0022+  44FB 00 00 00 00 
0022+  44FF 00 00 00 00 
0022+  4503 00 00 00 00 
0022+  4507 00 
0023+  4508 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 19
0023+  450C 00 00 00 00 
0023+  4510 00 00 00 00 
0023+  4514 00 00 00 00 
0023+  4518 00 00 00 00 
0023+  451C 00 00 00 00 
0023+  4520 00 00 00 00 
0023+  4524 00 00 00 00 
0023+  4528 00 
0024+  4529 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 20
0024+  452D 00 00 00 00 
0024+  4531 00 00 00 00 
0024+  4535 00 00 00 00 
0024+  4539 00 00 00 00 
0024+  453D 00 00 00 00 
0024+  4541 00 00 00 00 
0024+  4545 00 00 00 00 
0024+  4549 00 
0025+  454A 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 21
0025+  454E 00 00 00 00 
0025+  4552 00 00 00 00 
0025+  4556 00 00 00 00 
0025+  455A 00 00 00 00 
0025+  455E 00 00 00 00 
0025+  4562 00 00 00 00 
0025+  4566 00 00 00 00 
0025+  456A 00 
0026+  456B 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 22
0026+  456F 00 00 00 00 
0026+  4573 00 00 00 00 
0026+  4577 00 00 00 00 
0026+  457B 00 00 00 00 
0026+  457F 00 00 00 00 
0026+  4583 00 00 00 00 
0026+  4587 00 00 00 00 
0026+  458B 00 
0027+  458C 76 00 00 00   DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 23
0027+  4590 00 00 00 00 
0027+  4594 00 00 00 00 
0027+  4598 00 00 00 00 
0027+  459C 00 00 00 00 
0027+  45A0 00 00 00 00 
0027+  45A4 00 00 00 00 
0027+  45A8 00 00 00 00 
0027+  45AC 00 
0028+  45AD 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 24
0028+  45B1 00 00 00 00 
0028+  45B5 00 00 00 00 
0028+  45B9 00 00 00 00 
0028+  45BD 00 00 00 00 
0028+  45C1 00 00 00 00 
0028+  45C5 00 00 00 00 
0028+  45C9 00 00 00 00 
0028+  45CD 00 
0029+  45CE 76 00 00 00 	DEFB 118,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0  ;  ; 25
0029+  45D2 00 00 00 00 
0029+  45D6 00 00 00 00 
0029+  45DA 00 00 00 00 
0029+  45DE 00 00 00 00 
0029+  45E2 00 00 00 00 
0029+  45E6 00 00 00 00 
0029+  45EA 00 00 00 00 
0029+  45EE 00 
0030+  45EF 76          	DEFB 118
0282   45F0             #include "endbasic.asm"
0001+  45F0             ; close out the BASIC program structure
0002+  45F0             ; BASIC Variables area 
0003+  45F0             Variables:      
0004+  45F0 80          VariablesEnd:   DEFB $80
0005+  45F1             BasicEnd:                              
0006+  45F1             
0007+  45F1             
0008+  45F1             #END
tasm: Number of errors = 0
